- name: Push aci_model

  # Reusable aci_common anchor
  vars:
    aci_common: &aci_common
      host: '{{ apic_host }}'
      username: '{{ apic_username }}'
      password: '{{ apic_password }}'
      use_proxy: '{{ apic_use_proxy }}'
      validate_certs: '{{ apic_validate_certs }}'
      use_ssl: true
      annotation: '{{ annotation | default("orchestrator:ansible") }}'
  delegate_to: localhost

  block:

  - name: Read all YAML files in the data directory into apic_configuration
    set_fact:
      apic_configuration: "{{ apic_configuration | default({}) | deep_merge_dicts(lookup('file', item) | from_yaml) }}"
    with_fileglob:
        - "{{ data_directory }}/*.yaml"

  - name: Create Tenants
    aci_tenant:
      <<: *aci_common
      tenant: '{{ item.apic_tenants_name }}'
      description: '{{ item.apic_tenants_description | default(omit) }}'
      name_alias: '{{ item.apic_tenants_alias | default(omit) }}'
    with_items: '{{ apic_configuration|extractor("apic","tenants") }}'

  - name: Create VRFs
    aci_vrf:
      <<: *aci_common
      tenant: '{{ item.apic_tenants_name }}'
      vrf_name: '{{ item.apic_tenants_vrfs_name }}'
      description: '{{ item.apic_tenants_vrfs_description | default(omit) }}'
      name_alias: '{{ item.apic_tenants_vrfs_alias | default(omit) }}'
      ip_data_plane_learning: '{{  item.apic_tenants_vrfs_data_plane_learning | default("enabled") | bool_converter() }}'
      policy_control_direction: '{{ item.apic_tenants_vrfs_enforcement_direction | default("ingress") }}'
      policy_control_preference: '{{ item.apic_tenants_vrfs_enforcement_preference | default("enforced") }}'
      preferred_group: '{{ item.apic_tenants_vrfs_preferred_group | default("disabled") | bool_converter() }}'
      # '{{ item.apic_tenants_vrfs_leaked_internal_prefixes }}'
      # '{{ item.apic_tenants_vrfs_leaked_external_prefixes }}'
      # '{{ item.apic_tenants_vrfs_contracts }}'
      # '{{ item.apic_tenants_vrfs_bgp }}'
      # '{{ item.apic_tenants_vrfs_dns_labels }}'
      # '{{ item.apic_tenants_vrfs_pim }}'
    with_items: '{{ apic_configuration|extractor("apic","tenants","vrfs") }}'

  - name: Create Bridge Domains
    aci_bd:
      <<: *aci_common
      tenant: '{{ item.apic_tenants_name }}'
      vrf: '{{ item.apic_tenants_bridge_domains_vrf }}'
      bd: '{{ item.apic_tenants_bridge_domains_name }}'
      name_alias: '{{ item.apic_tenants_bridge_domains_alias | default(omit) }}'
      description: '{{ item.apic_tenants_bridge_domains_description | default(omit) }}'
      arp_flooding: '{{ item.apic_tenants_bridge_domains_arp_flooding | default(true) }}'
      # advertise_host_routes
      ip_learning: '{{ item.apic_tenants_bridge_domains_ip_dataplane_learning | default(omit) }}'
      limit_ip_learn: '{{ item.apic_tenants_bridge_domains_limit_ip_learn_to_subnets | default(omit) }}'
      mac_address: '{{ item.apic_tenants_bridge_domains_mac | default(omit) }}'
      # virtual_mac
      endpoint_move_detect: '{{ "garp" if (item.apic_tenants_bridge_domains_ep_move_detection | default(false)) else "default" }}'
      enable_multicast: '{{ item.apic_tenants_bridge_domains_l3_multicast | default(omit) }}'
      multi_dest: '{{ item.apic_tenants_bridge_domains_multi_destination_flooding | default(omit) }}'
      enable_routing: '{{ item.apic_tenants_bridge_domains_unicast_routing | default(omit) }}'
      l2_unknown_unicast: '{{ item.apic_tenants_bridge_domains_unknown_unicast | default("flood") }}'
      l3_unknown_multicast: '{{ item.apic_tenants_bridge_domains_unknown_ipv4_multicast | default(omit) }}'
      ipv6_l3_unknown_multicast: '{{ item.apic_tenants_bridge_domains_unknown_ipv6_multicast | default(omit) }}'
      # subnets
      # l3outs
      # dhcp_labels
      # igmp_interface_policy
      igmp_snoop_policy: '{{ item.apic_tenants_bridge_domains_igmp_snooping_policy | default(omit) }}'
    with_items: '{{ apic_configuration|extractor("apic","tenants","bridge_domains") }}'
